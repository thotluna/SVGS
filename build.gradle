buildscript {
    ext {
        compose_version = '1.1.1'
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.1.2' apply false
    id 'com.android.library' version '7.1.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.10' apply false
    id "org.jlleitschuh.gradle.ktlint" version "10.2.1"
}
configurations {
    ktlint
}

dependencies {
    ktlint("com.pinterest:ktlint:0.44.0") {
        attributes {
            attribute(Bundling.BUNDLING_ATTRIBUTE, getObjects().named(Bundling, Bundling.EXTERNAL))
        }
    }
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}

//task ktlint(type: JavaExec, group: "verification") {
//    description = "Check Kotlin code style."
//    classpath = configurations.ktlint
//    mainClass.set("com.pinterest.ktlint.Main")
//    args "src/**/*.kt"
//    // to generate report in checkstyle format prepend following args:
//    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
//    // to add a baseline to check against prepend following args:
//    // "--baseline=ktlint-baseline.xml"
//    // see https://github.com/pinterest/ktlint#usage for more
//}
//check.dependsOn ktlint

//task ktlintFormat(type: JavaExec, group: "formatting") {
//    description = "Fix Kotlin code style deviations."
//    classpath = configurations.ktlint
//    mainClass.set("com.pinterest.ktlint.Main")
//    args "-F", "src/**/*.kt"
//}

task clean(type: Delete) {
    delete rootProject.buildDir
}